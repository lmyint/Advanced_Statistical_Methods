tail(thresholds)
tail(pvals.pass.thresh)
pvals.sorted[[1]][1:10]
thresholds[1:10]
sum(pvals.pass.thresh)
min(which(pvals.pass.thresh))
set.seed(1)
mat = matrix(rnorm(100000*400),nrow=100000,ncol=400)
pvals = apply(mat,1,t.test)
pvals = unlist(pvals)
pvals = pvals[names(pvals)=='p.value']
pvals = as.numeric(unname(pvals))
sum(pvals <= 0.05)
sum(pvals <= 5E-7)
alphaSidak = 1-(1-.05)^(1/100000)
sum(pvals <= alphaSidak)
pvals.sorted = sort.int(pvals,index.return=T)
thresholds = 0.05/(100000+1-seq(1,100000))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
min(which(pvals.pass.thresh))
thresholds = .05*seq(1,100000)/100000
thresholds2 = .05*seq(1,100000)/100000
pvals.pass.thresh2 = pvals.sorted[[1]] > thresholds2
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
min(which(pvals.pass.thresh2))
head(thresholds2)
sum(pvals.pass.thresh2)
tail(thresholds2)
tail(pvals.sorted[[1]])
which(pvals.pass.thresh2)
min(which(pvals.pass.thresh2),na.rm=T)
source('~/Google Drive/Grad School/Stat Theory/hw2_optim.R')
load(url("http://goo.gl/dkTfpE"))
mean = mean(data)
mean = mean(x)
med = median(x)
hist(x)
hist(x,breaks=30)
load(url("http://goo.gl/jrBE7G"))
data = x
lm.fit = lm(y ~ x,data=data)
data = data.frame(x)
lm.fit = lm(y ~ x,data=data)
lm.fit
summary(lm.fit)
load(url(http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data))
load(url('http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data'))
read.csv(url('http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data'))
data = read.csv(url('http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data'))
head(daa)
head(data)
data = read.csv(url('http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data'),header=F)
head(data)
data = read.table(url('http://genome-www.stanford.edu/clustering/Figure2.txt'),header=T)
data = read.table(url('http://genome-www.stanford.edu/clustering/Figure2.txt'))
data = read.table(url('http://genome-www.stanford.edu/clustering/Figure2.txt'),sep='\t')
head(data)
data = read.table(url('http://genome-www.stanford.edu/clustering/Figure2.txt'),sep='\t',header=T)
head(data)
data = infert
data = iris
data = infert
data[1,]
data.case = data[data$case==1,]
data.control = data[data$case==0,]
table(data.control$induced)
table(data.case$induced)
chisq.test(table(data.case$induced),table(data.control$induced))
chisq.test(as.numeric(table(data.case$induced)),as.numeric(table(data.control$induced)))
data = titanic
data = Titanic
set.seed(1)
n = 12642
perc.signif = .006
num.true.signif = floor(n*perc.signif)
signif.means.1 = runif(num.true.signif,min=15,max=25)
signif.diff = runif(num.true.signif,min=5,max=15)
signif.means.2 = signif.means.1 + signif.diff
signif.means.1
signif.means.2
signif.diff
group1.signif = sapply(signif.means.1,rnorm,n=84)
group1.signif
group1.signif = sapply(signif.means.1,rnorm,n=84,sd=0)
head(group1.signif)
head(signif.means.1)
set.seed(1)
n = 12642
perc.signif = .006
num.true.signif = floor(n*perc.signif)
num.nonsignif = n - num.true.signif
num.group1 = 42
num.group2 = 76
signif.means.1 = runif(num.true.signif,min=15,max=25)
signif.diff = runif(num.true.signif,min=5,max=15)
signif.means.2 = signif.means.1 + signif.diff
nonsignif.means = runif(num.nonsignif,min=15,max=25)
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=2)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=2)
num.people = num.group1 + num.group2
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
rownames(data)
rownames(data) = rownames(data, do.NULL=F, prefix = "gene")
rownames(data)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
rownames(data)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
rownames(data)
data[1:10,4:20]
data = t(data)
data[1:10,4:20]
data1 = data[,1:num.group1]
data2 = data[,(num.group1+1):num.people]
rm(data)
rm(group1.signif,group2.signif,groups.both.nonsignif)
test.results = apply(data1,1,wilcox.text,y=data2)
test.results = apply(data1,1,'wilcox.text',y=data2)
test.results = apply(data1,1,wilcox.test,y=data2)
test.results = apply(data1,1,sum,y=data2)
test.results[[1]]
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=2)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=2)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
rm(group1.signif,group2.signif,groups.both.nonsignif)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
head(test.results)
tail(test.results)
test.results[1:100]
data[1,]
alpha = 0.05
alpha.Bonf = alpha/n
sum(test.results < alpha.Bonf)
alphaSidak = 1-(1-alpha)^(1/n)
sum(test.results < alpha.Sidak)
alphaSidak = 1-(1-alpha)^(1/n)
sum(test.results < alpha.Sidak)
alpha.Sidak = 1-(1-alpha)^(1/n)
sum(test.results < alpha.Sidak)
thresholds = alpha/(n+1-seq(1,n))
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
min(which(pvals.pass.thresh))
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
min(which(pvals.pass.thresh2))
head(pvals.sorted[[1]])
pvals.sorted[[1]][20:30]
pvals.sorted[[1]][50:100]
sum(test.results <= alpha.Sidak)
sum(test.results <= alpha.Bonf)
test.results[1:num.group1]
test.results[(num.group1+1):200]
min(which(pvals.pass.thresh2))
max(which(pvals.pass.thresh2))
set.seed(1)
t = 100000
samp.size = 400
mat = matrix(rnorm(t*samp.size),nrow=t,ncol=samp.size)
pvals = apply(mat,1,function(row) {t.test(row)$p.value} )
alpha = 0.05
sum(pvals <= alpha)
sum(pvals <= alpha/t)
which(pvals <= alpha/t)
alphaSidak = 1-(1-alpha)^(1/t)
sum(pvals <= alphaSidak)
pvals.sorted = sort.int(pvals,index.return=T)
thresholds = alpha/(t+1-seq(1,t))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
min(which(pvals.pass.thresh))
thresholds2 = alpha*seq(1,t)/t
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
max(which(pvals.pass.thresh2))
set.seed(1)
n = 12642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=4,max=7) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=2)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=2)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
rm(group1.signif,group2.signif,groups.both.nonsignif)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.Bonf = alpha/n
sum(test.results <= alpha.Bonf)
alpha.Sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.Sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
min(which(pvals.pass.thresh))
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
max(which(pvals.pass.thresh2))
set.seed(1)
n = 12642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=4,max=7) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=4)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=4)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
rm(group1.signif,group2.signif,groups.both.nonsignif)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.Bonf = alpha/n
sum(test.results <= alpha.Bonf)
alpha.Sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.Sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
min(which(pvals.pass.thresh))
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
max(which(pvals.pass.thresh2))
discoveries.bonf = which(test.results <= alpha.bonf)
discoveries.sidak = which(test.results <= alpha.sidak)
alpha = 0.05
alpha.bonf = alpha/n
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bonf
discoveries.sidak
discoveries.holmbonf
discoveries.bh
set.seed(1)
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=2,max=4) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=6)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=6)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.bonf = alpha/n
min(test.results)
test.results[1:100]
sum(t(rbind(group1.signif,group2.signif))!=data[1:111,])
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
discoveries.bonf
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
discoveries.sidak
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
discoveries.holmbonf
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bh
setwd("~/Google Drive/Grad School/Methods III and IV/jhsph753and4/assignments/Final Project/Advanced_Statistical_Methods/Multiple_Testing")
save(data,file='mult_test_1.rda')
set.seed(1)
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=2,max=4) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=5)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=5)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=4)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.bonf = alpha/n
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bonf
discoveries.sidak
discoveries.holmbonf
discoveries.bh
save(data,file='mult_test_2.rda')
set.seed(1)
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=2,max=4) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
# Dataset 1: sd = 6 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
# Dataset 2: sd = 5 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=4)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=4)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=8)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.bonf = alpha/n
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bonf
discoveries.sidak
discoveries.holmbonf
discoveries.bh
sort(discoveries.bh)
set.seed(1)
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=2,max=4) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
# Dataset 1: sd = 6 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
# Dataset 2: sd = 5 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
# Dataset 3: sd = 4 for signif genes in groups 1 and 2 is 6, sd = 8 for nonsignificant genes
# Dataset 4: sd = 4 for signif genes in groups 1 and 2 is 6, sd = 10 for nonsignificant genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=4)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=4)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=10)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.bonf = alpha/n
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bonf
discoveries.sidak
set.seed(1)
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
num.group1 = 42 # e.g. number of cases
num.group2 = 76 # e.g. number of controls
num.people = num.group1 + num.group2
signif.means.1 = runif(num.true.signif,min=15,max=25) # Mean expression in group 1 (cases) for signif genes
signif.diff = runif(num.true.signif,min=2,max=4) # Difference in mean expression between group 1 and group 2 for signif genes
signif.means.2 = signif.means.1 + signif.diff # Mean expression in group 2 (controls) for signif genes
nonsignif.means = runif(num.nonsignif,min=15,max=25) # Mean expression for both groups for nonsignif genes
# Dataset 1: sd = 6 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
# Dataset 2: sd = 5 for signif genes in groups 1 and 2 is 6, sd = 4 for nonsignificant genes
# Dataset 3: sd = 4 for signif genes in groups 1 and 2 is 6, sd = 8 for nonsignificant genes
group1.signif = sapply(signif.means.1,rnorm,n=num.group1,sd=4)
group2.signif = sapply(signif.means.2,rnorm,n=num.group2,sd=4)
groups.both.nonsignif = sapply(nonsignif.means,rnorm,n=num.people,sd=8)
data = rbind(group1.signif,group2.signif)
data = cbind(data,groups.both.nonsignif)
colnames(data) = colnames(data, do.NULL=F, prefix = "gene")
rownames(data) = as.factor(c(rep(1,num.group1),rep(2,num.group2)))
data = t(data)
# data1 = data[,1:num.group1]
# data2 = data[,(num.group1+1):num.people]
# rm(group1.signif,group2.signif,groups.both.nonsignif)
test.results = apply(data,1,function(row){ wilcox.test(row[1:num.group1],row[(num.group1+1):num.people])$p.value })
alpha = 0.05
alpha.bonf = alpha/n
sum(test.results <= alpha.bonf)
discoveries.bonf = which(test.results <= alpha.bonf)
alpha.sidak = 1-(1-alpha)^(1/n)
sum(test.results <= alpha.sidak)
discoveries.sidak = which(test.results <= alpha.sidak)
pvals.sorted = sort.int(test.results,index.return=T)
thresholds = alpha/(n+1-seq(1,n))
pvals.pass.thresh = pvals.sorted[[1]] > thresholds
cutoff.holmbonf = min(which(pvals.pass.thresh))
discoveries.holmbonf = pvals.sorted[[2]][1:(cutoff.holmbonf-1)]
thresholds2 = alpha*seq(1,n)/n
pvals.pass.thresh2 = pvals.sorted[[1]] <= thresholds2
cutoff.bh = max(which(pvals.pass.thresh2))
discoveries.bh = pvals.sorted[[2]][1:cutoff.bh]
discoveries.bonf
discoveries.sidak
discoveries.holmbonf
discoveries.bh
save(data,file='mult_test_3.rda')
library(swirl)
swirl()
bye()
help(swirl)
swirl()
swirl()
play()
nxt()
bye()
n = 18642 # Total number of genes being studied
perc.signif = .006 # Percent of total genes that are actually significant
num.true.signif = floor(n*perc.signif) # Actual number of significant genes
num.nonsignif = n - num.true.signif # Acutal number of nonsignificant genes
install_course_directory("../../Advanced_Statistical_Methods/")
swirl()
library(devtools)
install_github("swirldev/swirl")
